{"version":3,"sources":["App/MyPoints/Header/Header.tsx","App/MyPoints/Semester/ClassItem/ClassItem.tsx","App/MyPoints/Semester/Semester.tsx","App/MyPoints/MyPointsAPI.ts","App/MyPoints/MyPoints.tsx","App/App.tsx","reportWebVitals.js","index.tsx"],"names":["Header","avgPoints","reload","checkNone","checkAll","className","alt","src","toFixed","onClick","ClassItem","name","credits","grades","points","checked","gradesList","setGrades","checkClassItem","selectRef","React","createRef","ref","onChange","current","value","map","item","type","Semester","semesterID","semesterName","classes","selectSemester","onlySelectSemester","defaultData","semesters","defaultClassesState","getPoints","gradesName","parseInt","filter","join","MyPoints","useState","firstLoad","setFirstLoad","data","setData","avgPointsState","setAvgPointsState","classesState","setClassesState","useEffect","sum","reduce","acc","cur","creditsSum","classItem","semester","newGrades","fetch","then","response","json","newData","sort","a","b","window","location","ID","reverse","ButtonAppBar","appRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29db231b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default function Header({ avgPoints, reload, checkNone, checkAll }: { avgPoints: number, reload: () => void, checkNone: () => void, checkAll: () => void }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"avatar\" alt=\"avatar\" src=\"./favicon.ico\" />\r\n      <h1>少爷的绩点</h1>\r\n      <p className=\"avg-points\">平均绩点：{avgPoints.toFixed(2)}</p>\r\n      <button className=\"ms-button\" onClick={reload}>刷新</button>\r\n      <button className=\"ms-button\" onClick={checkNone}>全部清除</button>\r\n      <button className=\"ms-button primary\" onClick={checkAll}>全部勾选</button>\r\n    </header>\r\n  )\r\n}","import React from 'react'\r\nimport './ClassItem.css'\r\n\r\nexport default function ClassItem({\r\n  name,\r\n  credits,\r\n  grades,\r\n  points,\r\n  checked,\r\n  gradesList,\r\n  setGrades,\r\n  checkClassItem\r\n}: {\r\n  name: string,\r\n  credits: number,\r\n  grades: string,\r\n  points: number,\r\n  checked: boolean,\r\n  gradesList: string[],\r\n  setGrades: (name: string, newGrades: string) => void,\r\n  checkClassItem: (name: string) => void\r\n\r\n}) {\r\n  const selectRef = React.createRef<HTMLSelectElement>()\r\n  return (\r\n    <li className=\"class-list-item\">\r\n      <span className=\"class-name\">{name}</span>\r\n      <span className=\"class-credits\">{credits}</span>\r\n      <span className=\"class-grades\">\r\n        <select\r\n          ref={selectRef}\r\n          onChange={() => selectRef.current && setGrades(name, selectRef.current.value)}\r\n          value={grades}>\r\n          {\r\n            gradesList.map(item =>\r\n              <option key={item} value={item}>{item}</option>\r\n            )\r\n          }\r\n        </select>\r\n      </span>\r\n      <span className=\"class-points\">{points}</span>\r\n      <span className=\"class-checked\">\r\n        <input type=\"checkbox\"\r\n          onChange={() => (checkClassItem(name))}\r\n          checked={checked} />\r\n      </span>\r\n    </li>\r\n  )\r\n}","import React from 'react'\r\nimport './Semester.css'\r\nimport ClassItem from './ClassItem/ClassItem'\r\n\r\nexport default function Semester({\r\n  semesterID,\r\n  semesterName,\r\n  classes,\r\n  gradesList,\r\n  setGrades,\r\n  selectSemester,\r\n  onlySelectSemester,\r\n  checkClassItem\r\n}: {\r\n  semesterID: string,\r\n  semesterName: string,\r\n  classes: {\r\n    semester: string;\r\n    grades: string;\r\n    credits: number;\r\n    name: string;\r\n    points: number;\r\n    checked: boolean;\r\n  }[],\r\n  gradesList: string[],\r\n  setGrades: (name: string, newGrades: string) => void,\r\n  selectSemester: (semesterID: string) => void,\r\n  onlySelectSemester: (semesterID: string) => void,\r\n  checkClassItem: (name: string) => void\r\n}) {\r\n  return (\r\n    <article className=\"semester\">\r\n      <header className=\"title-bar\">\r\n        <h2>{semesterName}</h2>\r\n        <button className=\"ms-button\"\r\n          onClick={() => selectSemester(semesterID)}>勾选学期</button>\r\n        <button className=\"ms-button primary\"\r\n          onClick={() => onlySelectSemester(semesterID)}>仅本学期</button>\r\n      </header>\r\n      <div className=\"class-list-head\">\r\n        <span className=\"name-field\">课程</span>\r\n        <span className=\"credits-field\">学分</span>\r\n        <span className=\"grades-field\">等级</span>\r\n        <span className=\"points-field\">绩点</span>\r\n        <span className=\"checked-field\">勾选</span>\r\n      </div>\r\n      {\r\n        classes.map(item =>\r\n          <ClassItem\r\n            key={item.name}\r\n            name={item.name}\r\n            credits={item.credits}\r\n            grades={item.grades}\r\n            points={item.points}\r\n            checked={item.checked}\r\n            gradesList={gradesList}\r\n            setGrades={setGrades}\r\n            checkClassItem={checkClassItem} />\r\n        )\r\n      }\r\n    </article>\r\n  )\r\n}","const baseUrl = 'https://liangrongjia.github.io/abby-stitch.github.io/db'\r\n\r\nexport const fetchDB: () => Promise<{\r\n  semesters: {\r\n    ID: string,\r\n    name: string,\r\n    order: number\r\n  }[],\r\n  grades: {\r\n    name: string,\r\n    points: number\r\n  }[],\r\n  classes: {\r\n    semester: string,\r\n    grades: string,\r\n    credits: number,\r\n    name: string\r\n  }[]\r\n}>\r\n  = () => fetch(`${baseUrl}/my-points.json`).then(response => response.json())","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header/Header'\r\nimport Semester from './Semester/Semester'\r\nimport * as MyPointsAPI from './MyPointsAPI'\r\n\r\nimport './MyPoints.css'\r\n\r\n/* 默认值 */\r\nconst defaultData: {\r\n  semesters: {\r\n    ID: string,\r\n    name: string,\r\n    order: number\r\n  }[],\r\n  grades: {\r\n    name: string,\r\n    points: number\r\n  }[],\r\n  classes: {\r\n    semester: string,\r\n    grades: string,\r\n    credits: number,\r\n    name: string\r\n  }[]\r\n} = {\r\n  semesters: [],\r\n  grades: [],\r\n  classes: []\r\n}\r\nconst defaultAvgPointsState: number = 0\r\nconst defaultClassesState: {\r\n  semester: string,\r\n  grades: string,\r\n  credits: number,\r\n  name: string,\r\n  points: number,\r\n  checked: boolean\r\n}[] = []\r\n\r\n/**\r\n * 根据 gradesName 获取 points\r\n */\r\nconst getPoints = (gradesName: string, grades: { name: string, points: number }[]) =>\r\n  parseInt(grades\r\n    .filter((item) => item.name === gradesName)\r\n    .map((item) => item.points)\r\n    .join(''))\r\n/**\r\n * 获取某 semester 下的所有 classItem\r\n */\r\nconst getClasses = (semesterID: string, classes: { semester: string, grades: string, credits: number, name: string, points: number, checked: boolean }[]) =>\r\n  classes.filter(classItem => classItem.semester === semesterID) || defaultClassesState\r\n\r\nexport default function MyPoints() {\r\n  const [firstLoad, setFirstLoad] = useState(true)\r\n  /* 存储 fetch 数据 */\r\n  const [data, setData] = useState(defaultData)\r\n  /* 用 hook 存储组件的 state */\r\n  const [avgPointsState, setAvgPointsState] = useState(defaultAvgPointsState)\r\n  const [classesState, setClassesState] = useState(defaultClassesState)\r\n\r\n  /* classesState 变更 -> avgPointsState 更新 */\r\n  useEffect(() => {\r\n    const sum = classesState.reduce((acc, cur) => cur.checked ? acc + cur.credits * cur.points : acc, 0)\r\n    const creditsSum = classesState.reduce((acc, cur) => cur.checked ? acc + cur.credits : acc, 0)\r\n    const avgPoints = creditsSum === 0 ? 0 : (sum / creditsSum)\r\n    setAvgPointsState(avgPoints)\r\n  }, [classesState]);\r\n\r\n  /**\r\n   * 重新加载该子应用\r\n   */\r\n  const reload = () => window.location.reload()\r\n  /**\r\n   * 勾选全部 classItem\r\n   */\r\n  const checkAll = () => setClassesState(\r\n    classesState\r\n      .map(classItem => ({\r\n        ...classItem,\r\n        checked: true\r\n      })))\r\n  /**\r\n   * 取消全部的 classItem 勾选\r\n   */\r\n  const checkNone = () => setClassesState(\r\n    classesState\r\n      .map(classItem => ({\r\n        ...classItem,\r\n        checked: false\r\n      })))\r\n  /**\r\n   * 勾选某 semester 的全部 classItem\r\n   */\r\n  const selectSemester = (semesterID: string) => setClassesState(\r\n    classesState\r\n      .map(classItem => ({\r\n        ...classItem,\r\n        checked: classItem.semester === semesterID || classItem.checked\r\n      })))\r\n  /**\r\n   * 仅勾选某 semester 的全部 classItem，其他 semester 的取消勾选\r\n   */\r\n  const onlySelectSemester = (semesterID: string) => setClassesState(\r\n    classesState\r\n      .map((classItem) => ({\r\n        ...classItem,\r\n        checked: classItem.semester === semesterID\r\n      })))\r\n  /**\r\n   * 勾选某 classItem\r\n   */\r\n  const checkClassItem = (name: string) => setClassesState(\r\n    classesState\r\n      .map(classItem => classItem.name === name ? {\r\n        ...classItem,\r\n        checked: !classItem.checked\r\n      } : classItem))\r\n  /**\r\n   * 设置某 classItem 的 grades\r\n   */\r\n  const setGrades = (name: string, newGrades: string) => setClassesState(\r\n    classesState\r\n      .map(classItem => classItem.name === name ? {\r\n        ...classItem,\r\n        grades: newGrades,\r\n        points: getPoints(newGrades, data.grades)\r\n      } : classItem))\r\n\r\n  if (firstLoad === true) {\r\n    setFirstLoad(false)\r\n    MyPointsAPI.fetchDB()\r\n      .then(newData => {\r\n        setData(newData)\r\n        setClassesState(\r\n          newData.classes\r\n            .map(item => ({\r\n              ...item,\r\n              points: getPoints(item.grades, newData.grades),\r\n              checked: true\r\n            }))\r\n            .sort((a, b) => b.points - a.points === 0 ? b.credits - a.credits : b.points - a.points)\r\n        )\r\n      })\r\n  }\r\n\r\n  return (\r\n    <main className='my-points'>\r\n      <Header\r\n        avgPoints={avgPointsState}\r\n        reload={reload}\r\n        checkAll={checkAll}\r\n        checkNone={checkNone} />\r\n      {data.semesters.map(semester =>\r\n        <Semester\r\n          key={semester.ID}\r\n          semesterID={semester.ID}\r\n          semesterName={semester.name}\r\n          classes={getClasses(semester.ID, classesState)}\r\n          gradesList={data.grades.map(item => item.name)}\r\n          setGrades={setGrades}\r\n          selectSemester={selectSemester}\r\n          onlySelectSemester={onlySelectSemester}\r\n          checkClassItem={checkClassItem} />\r\n      ).reverse()}\r\n    </main>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css'\r\nimport MyPoints from './MyPoints/MyPoints'\r\n\r\nexport default function ButtonAppBar() {\r\n  const appRef = React.createRef<HTMLDivElement>()\r\n\r\n  // const toggleFullScreen = () => {\r\n  //   document.fullscreenElement ? document.exitFullscreen() : appRef.current.requestFullscreen()    \r\n  // }\r\n\r\n  return (\r\n    <div ref={appRef} className='app'>\r\n      <MyPoints />\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}